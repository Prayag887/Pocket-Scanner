import java.util.Properties

plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

android {
    namespace = "com.example.pocketscanner"
    compileSdk = 35

    defaultConfig {
        applicationId = "com.example.pocketscanner"
        minSdk = 24
        targetSdk = 35
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        android {
            // Load from local.properties
            val properties = Properties().apply {
                load(rootProject.file("local.properties").inputStream())
            }

            signingConfigs {
                create("release") {
                    storeFile = file(properties.getProperty("keystore.path"))
                    storePassword = properties.getProperty("keystore.password")
                    keyAlias = properties.getProperty("key.alias")
                    keyPassword = properties.getProperty("key.password")
                }
            }

            buildTypes {
                getByName("release") {
                    isMinifyEnabled = true
                    isShrinkResources = true
                    proguardFiles(
                        getDefaultProguardFile("proguard-android-optimize.txt"),
                        "proguard-rules.pro"
                    )
                    signingConfig = signingConfigs.getByName("release")
                }

                getByName("debug") {
                    signingConfig = signingConfigs.getByName("debug")
                    buildConfigField("boolean", "DEBUG", "true")
                }
            }
        }
    }

        compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        compose = true
        buildConfig = true
    }
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.material3)
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)

    // CameraX Core Library
    implementation (libs.androidx.camera.core)

    // CameraX Camera2 Implementation
    implementation (libs.androidx.camera.camera2)

    // CameraX Lifecycle
    implementation (libs.androidx.camera.lifecycle)

    // CameraX View for Preview
    implementation (libs.androidx.camera.view)

    // Optional: For image analysis
    implementation (libs.androidx.camera.extensions)

    implementation (libs.androidx.navigation.compose)


    implementation(libs.document.scanner)

    implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.aar"))))

    implementation (libs.material)

    //koin
    implementation(libs.koin.android)
    implementation(libs.koin.core)
    implementation(libs.koin.androidx.compose)

    testImplementation(libs.koin.test.junit5)

    // material icons
    implementation(libs.androidx.material.icons.core)
    implementation(libs.androidx.material.icons.extended)

    implementation(libs.coil.compose)

}
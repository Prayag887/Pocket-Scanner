package com.example.pocketscanner.presentation.viewmodels

import android.content.Context
import android.graphics.Bitmap
import android.util.Log
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext
import java.io.File

class PreviewTabViewModel : ViewModel() {
    private val pdfBitmapCache = mutableMapOf<String, Bitmap>()

    fun getCachedPdfBitmap(documentId: String, pageIndex: Int): Bitmap? {
        return pdfBitmapCache["$documentId:$pageIndex"]
    }

    fun cachePdfBitmap(documentId: String, pageIndex: Int, bitmap: Bitmap) {
        pdfBitmapCache["$documentId:$pageIndex"] = bitmap
    }

    fun deleteDocument(context: Context, fileName: String, onResult: (Boolean) -> Unit = {}) {
        viewModelScope.launch(Dispatchers.IO) {
            val file = File("data/data/${context.packageName}/files",fileName)

            val deleted = if (file.exists()) {
                file.delete().also {
                    if (it) {
                        Log.d("Delete", "Successfully deleted file: ${file.absolutePath}")
                    } else {
                        Log.e("Delete", "Failed to delete file: ${file.absolutePath}")
                    }
                }
            } else {
                Log.w("Delete", "File does not exist: ${file.absolutePath}")
                false
            }

            withContext(Dispatchers.Main) {
                onResult(deleted)
            }
        }
    }


    override fun onCleared() {
        pdfBitmapCache.clear()
        super.onCleared()
    }
}
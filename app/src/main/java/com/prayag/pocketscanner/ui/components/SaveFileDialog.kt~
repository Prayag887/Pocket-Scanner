//package com.example.pocketscanner.ui.components
//
//import androidx.compose.animation.AnimatedVisibility
//import androidx.compose.animation.core.animateFloatAsState
//import androidx.compose.animation.fadeIn
//import androidx.compose.animation.fadeOut
//import androidx.compose.foundation.background
//import androidx.compose.foundation.layout.*
//import androidx.compose.foundation.rememberScrollState
//import androidx.compose.foundation.shape.RoundedCornerShape
//import androidx.compose.foundation.text.KeyboardActions
//import androidx.compose.foundation.text.KeyboardOptions
//import androidx.compose.foundation.verticalScroll
//import androidx.compose.material.icons.Icons
//import androidx.compose.material.icons.filled.*
//import androidx.compose.material.icons.outlined.CheckCircle
//import androidx.compose.material.icons.outlined.Info
//import androidx.compose.material3.*
//import androidx.compose.runtime.*
//import androidx.compose.ui.Alignment
//import androidx.compose.ui.ExperimentalComposeUiApi
//import androidx.compose.ui.Modifier
//import androidx.compose.ui.draw.alpha
//import androidx.compose.ui.focus.FocusRequester
//import androidx.compose.ui.focus.focusRequester
//import androidx.compose.ui.graphics.Brush
//import androidx.compose.ui.graphics.Color
//import androidx.compose.ui.platform.LocalFocusManager
//import androidx.compose.ui.platform.LocalSoftwareKeyboardController
//import androidx.compose.ui.text.font.FontWeight
//import androidx.compose.ui.text.input.ImeAction
//import androidx.compose.ui.unit.dp
//import androidx.compose.ui.unit.sp
//import kotlinx.coroutines.delay
//import kotlinx.coroutines.launch
//
//@OptIn(ExperimentalMaterial3Api::class, ExperimentalComposeUiApi::class)
//@Composable
//fun SaveDocumentScreen(
//    previewImageUrl: String? = null,
//    onDismiss : () -> Unit,
//    onNavigateBack: () -> Unit,
//    onSave: (fileName: String, format: String) -> Unit
//) {
//    // State
//    var fileName by remember { mutableStateOf("") }
//    var selectedFormat by remember { mutableStateOf("pdf") }
//    var fileQuality by remember { mutableStateOf(80) }
//    var showSaveSuccess by remember { mutableStateOf(false) }
//    var isErrorVisible by remember { mutableStateOf(false) }
//    var errorMessage by remember { mutableStateOf("") }
//
//    // Format options with additional info
//    val formatOptions = remember {
//        listOf(
//            FormatOption("pdf", "PDF Document", "Best for documents with text"),
//            FormatOption("jpg", "JPEG Image", "Smaller file size, some quality loss"),
//            FormatOption("png", "PNG Image", "Lossless quality, larger file size")
//        )
//    }
//
//    // UI helpers
//    val scrollState = rememberScrollState()
//    val scope = rememberCoroutineScope()
//    val focusManager = LocalFocusManager.current
//    val keyboardController = LocalSoftwareKeyboardController.current
//    val fileNameFocusRequester = remember { FocusRequester() }
//
//    // Validations
//    val isFileNameValid = fileName.isNotBlank() &&
//            !fileName.contains(Regex("[\\\\/:*?\"<>|]"))
//    val hasError = !isFileNameValid && fileName.isNotBlank()
//
//    LaunchedEffect(Unit) {
//        fileNameFocusRequester.requestFocus()
//    }
//
//    Scaffold(
//        topBar = {
//            LargeTopAppBar(
//                title = {
//                    Text(
//                        "Save Document",
//                        fontWeight = FontWeight.Bold
//                    )
//                },
//                navigationIcon = {
//                    IconButton(onClick = onNavigateBack) {
//                        Icon(Icons.Default.ArrowBack, "Back")
//                    }
//                },
//                colors = TopAppBarDefaults.largeTopAppBarColors(
//                    containerColor = MaterialTheme.colorScheme.surface
//                )
//            )
//        }
//    ) { paddingValues ->
//        Box(
//            modifier = Modifier
//                .fillMaxSize()
//                .padding(paddingValues)
//        ) {
//            // Main content
//            Column(
//                modifier = Modifier
//                    .fillMaxSize()
//                    .verticalScroll(scrollState)
//                    .padding(horizontal = 24.dp),
//                verticalArrangement = Arrangement.spacedBy(24.dp)
//            ) {
//                // Preview card (if available)
//                previewImageUrl?.let {
//                    DocumentPreviewCard(previewImageUrl = it)
//                }
//
//                // File name section
//                Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
//                    Text(
//                        "File Name",
//                        fontWeight = FontWeight.Medium,
//                        color = MaterialTheme.colorScheme.onSurface
//                    )
//
//                    OutlinedTextField(
//                        value = fileName,
//                        onValueChange = {
//                            fileName = it
//                            if (hasError) {
//                                errorMessage = "File name cannot contain: \\ / : * ? \" < > |"
//                                isErrorVisible = true
//                            } else {
//                                isErrorVisible = false
//                            }
//                        },
//                        placeholder = { Text("Enter document name") },
//                        leadingIcon = {
//                            Icon(
//                                Icons.Default.Description,
//                                contentDescription = null,
//                                tint = MaterialTheme.colorScheme.primary
//                            )
//                        },
//                        trailingIcon = {
//                            if (hasError) {
//                                Icon(
//                                    Icons.Default.Error,
//                                    "Error",
//                                    tint = MaterialTheme.colorScheme.error
//                                )
//                            } else if (fileName.isNotBlank()) {
//                                Icon(
//                                    Icons.Outlined.CheckCircle,
//                                    "Valid",
//                                    tint = MaterialTheme.colorScheme.primary
//                                )
//                            }
//                        },
//                        keyboardOptions = KeyboardOptions(imeAction = ImeAction.Done),
//                        keyboardActions = KeyboardActions(
//                            onDone = {
//                                keyboardController?.hide()
//                                focusManager.clearFocus()
//                            }
//                        ),
//                        isError = hasError,
//                        singleLine = true,
//                        modifier = Modifier
//                            .fillMaxWidth()
//                            .focusRequester(fileNameFocusRequester)
//                    )
//
//                    AnimatedVisibility(
//                        visible = isErrorVisible,
//                        enter = fadeIn(),
//                        exit = fadeOut()
//                    ) {
//                        Text(
//                            errorMessage,
//                            color = MaterialTheme.colorScheme.error,
//                            fontSize = 12.sp,
//                            modifier = Modifier.padding(start = 16.dp)
//                        )
//                    }
//                }
//
//                // Format section
//                Column(verticalArrangement = Arrangement.spacedBy(16.dp)) {
//                    Text(
//                        "File Format",
//                        fontWeight = FontWeight.Medium,
//                        color = MaterialTheme.colorScheme.onSurface
//                    )
//
//                    FormatSelector(
//                        options = formatOptions,
//                        selectedValue = selectedFormat,
//                        onFormatSelected = { selectedFormat = it }
//                    )
//                }
//
//                // Quality slider (only for image formats)
//                AnimatedVisibility(visible = selectedFormat != "pdf") {
//                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
//                        Row(
//                            verticalAlignment = Alignment.CenterVertically,
//                            horizontalArrangement = Arrangement.SpaceBetween,
//                            modifier = Modifier.fillMaxWidth()
//                        ) {
//                            Text(
//                                "Quality",
//                                fontWeight = FontWeight.Medium,
//                                color = MaterialTheme.colorScheme.onSurface
//                            )
//
//                            Text(
//                                "$fileQuality%",
//                                fontWeight = FontWeight.SemiBold,
//                                color = MaterialTheme.colorScheme.primary
//                            )
//                        }
//
//                        Slider(
//                            value = fileQuality.toFloat(),
//                            onValueChange = { fileQuality = it.toInt() },
//                            valueRange = 50f..100f,
//                            steps = 5,
//                            modifier = Modifier.fillMaxWidth()
//                        )
//
//                        Row(
//                            verticalAlignment = Alignment.CenterVertically,
//                            modifier = Modifier
//                                .fillMaxWidth()
//                                .padding(top = 4.dp)
//                        ) {
//                            Icon(
//                                Icons.Outlined.Info,
//                                contentDescription = null,
//                                tint = MaterialTheme.colorScheme.onSurfaceVariant,
//                                modifier = Modifier.size(16.dp)
//                            )
//                            Spacer(modifier = Modifier.width(8.dp))
//                            Text(
//                                if (fileQuality < 70)
//                                    "Lower quality saves storage space"
//                                else if (fileQuality > 90)
//                                    "Higher quality uses more storage space"
//                                else
//                                    "Balanced quality and file size",
//                                fontSize = 12.sp,
//                                color = MaterialTheme.colorScheme.onSurfaceVariant
//                            )
//                        }
//                    }
//                }
//
//                // Format details card
//                val currentFormat = formatOptions.find { it.value == selectedFormat }
//                currentFormat?.let {
//                    FormatInfoCard(format = it)
//                }
//
//                Spacer(modifier = Modifier.height(72.dp))
//            }
//
//            // Bottom save button
//            BottomSaveButton(
//                isEnabled = isFileNameValid,
//                isSaving = showSaveSuccess,
//                onClick = {
//                    if (isFileNameValid) {
//                        keyboardController?.hide()
//                        showSaveSuccess = true
//                        scope.launch {
//                            delay(1500)
//                            onSave(fileName, selectedFormat)
//                        }
//                    } else {
//                        errorMessage = "Please enter a valid file name"
//                        isErrorVisible = true
//                    }
//                },
//                modifier = Modifier.align(Alignment.BottomCenter)
//            )
//        }
//    }
//}
//
//@Composable
//fun DocumentPreviewCard(previewImageUrl: String) {
//    Card(
//        shape = RoundedCornerShape(16.dp),
//        colors = CardDefaults.cardColors(
//            containerColor = MaterialTheme.colorScheme.surfaceVariant.copy(alpha = 0.7f)
//        ),
//        modifier = Modifier
//            .fillMaxWidth()
//            .height(180.dp)
//    ) {
//        Box(
//            modifier = Modifier.fillMaxSize(),
//            contentAlignment = Alignment.Center
//        ) {
//            // In a real app, you would load the image from the URL
//            // Here we just show a placeholder
//            Column(horizontalAlignment = Alignment.CenterHorizontally) {
//                Icon(
//                    Icons.Default.Image,
//                    contentDescription = null,
//                    tint = MaterialTheme.colorScheme.primary,
//                    modifier = Modifier.size(64.dp)
//                )
//                Spacer(modifier = Modifier.height(8.dp))
//                Text(
//                    "Document Preview",
//                    style = MaterialTheme.typography.bodyMedium
//                )
//            }
//        }
//    }
//}
//
//@Composable
//fun FormatSelector(
//    options: List<FormatOption>,
//    selectedValue: String,
//    onFormatSelected: (String) -> Unit
//) {
//    Row(
//        modifier = Modifier.fillMaxWidth(),
//        horizontalArrangement = Arrangement.spacedBy(12.dp)
//    ) {
//        options.forEach { format ->
//            FormatOption(
//                format = format,
//                isSelected = format.value == selectedValue,
//                onClick = { onFormatSelected(format.value) },
//                modifier = Modifier.weight(1f)
//            )
//        }
//    }
//}
//
//@Composable
//fun FormatOption(
//    format: FormatOption,
//    isSelected: Boolean,
//    onClick: () -> Unit,
//    modifier: Modifier = Modifier
//) {
//    val iconForFormat = when(format.value) {
//        "pdf" -> Icons.Default.PictureAsPdf
//        "jpg" -> Icons.Default.Image
//        "png" -> Icons.Default.Image
//        else -> Icons.Default.Description
//    }
//
//    val backgroundColor = if (isSelected) {
//        MaterialTheme.colorScheme.primaryContainer
//    } else {
//        MaterialTheme.colorScheme.surfaceVariant.copy(alpha = 0.7f)
//    }
//
//    val contentColor = if (isSelected) {
//        MaterialTheme.colorScheme.onPrimaryContainer
//    } else {
//        MaterialTheme.colorScheme.onSurfaceVariant
//    }
//
//    Surface(
//        onClick = onClick,
//        shape = RoundedCornerShape(12.dp),
//        color = backgroundColor,
//        modifier = modifier.height(100.dp)
//    ) {
//        Column(
//            horizontalAlignment = Alignment.CenterHorizontally,
//            verticalArrangement = Arrangement.Center,
//            modifier = Modifier
//                .fillMaxSize()
//                .padding(8.dp)
//        ) {
//            Icon(
//                iconForFormat,
//                contentDescription = null,
//                tint = contentColor,
//                modifier = Modifier.size(32.dp)
//            )
//
//            Spacer(modifier = Modifier.height(8.dp))
//
//            Text(
//                format.value.uppercase(),
//                fontWeight = FontWeight.Bold,
//                color = contentColor
//            )
//        }
//    }
//}
//
//@Composable
//fun FormatInfoCard(format: FormatOption) {
//    Card(
//        colors = CardDefaults.cardColors(
//            containerColor = MaterialTheme.colorScheme.surfaceVariant.copy(alpha = 0.5f)
//        ),
//        modifier = Modifier.fillMaxWidth()
//    ) {
//        Column(
//            modifier = Modifier.padding(16.dp),
//            verticalArrangement = Arrangement.spacedBy(4.dp)
//        ) {
//            Text(
//                format.name,
//                fontWeight = FontWeight.SemiBold,
//                color = MaterialTheme.colorScheme.onSurfaceVariant
//            )
//
//            Text(
//                format.description,
//                style = MaterialTheme.typography.bodyMedium,
//                color = MaterialTheme.colorScheme.onSurfaceVariant.copy(alpha = 0.8f)
//            )
//
//            // Format-specific additional information
//            val additionalInfo = when(format.value) {
//                "pdf" -> "PDF files preserve formatting across devices and are ideal for documents that might be printed."
//                "jpg" -> "JPEG is best for photos and complex images where file size matters more than perfect quality."
//                "png" -> "PNG maintains image quality and supports transparency, but creates larger files."
//                else -> ""
//            }
//
//            if (additionalInfo.isNotEmpty()) {
//                Spacer(modifier = Modifier.height(8.dp))
//                Text(
//                    additionalInfo,
//                    style = MaterialTheme.typography.bodySmall,
//                    color = MaterialTheme.colorScheme.onSurfaceVariant.copy(alpha = 0.7f)
//                )
//            }
//        }
//    }
//}
//
//@Composable
//fun BottomSaveButton(
//    isEnabled: Boolean,
//    isSaving: Boolean,
//    onClick: () -> Unit,
//    modifier: Modifier = Modifier
//) {
//    val buttonAlpha by animateFloatAsState(
//        targetValue = if (isEnabled) 1f else 0.6f,
//        label = "ButtonAlpha"
//    )
//
//    Box(
//        modifier = modifier
//            .fillMaxWidth()
//            .background(
//                brush = Brush.verticalGradient(
//                    colors = listOf(
//                        Color.Transparent,
//                        MaterialTheme.colorScheme.surface.copy(alpha = 0.8f),
//                        MaterialTheme.colorScheme.surface
//                    )
//                )
//            )
//            .padding(24.dp)
//    ) {
//        Button(
//            onClick = onClick,
//            enabled = isEnabled && !isSaving,
//            shape = RoundedCornerShape(16.dp),
//            modifier = Modifier
//                .fillMaxWidth()
//                .height(56.dp)
//                .alpha(buttonAlpha)
//        ) {
//            Row(
//                verticalAlignment = Alignment.CenterVertically,
//                horizontalArrangement = Arrangement.Center
//            ) {
//                if (isSaving) {
//                    CircularProgressIndicator(
//                        color = MaterialTheme.colorScheme.onPrimary,
//                        strokeWidth = 2.dp,
//                        modifier = Modifier.size(20.dp)
//                    )
//                    Spacer(modifier = Modifier.width(16.dp))
//                    Text("Saving...")
//                } else {
//                    Icon(
//                        Icons.Default.Save,
//                        contentDescription = null
//                    )
//                    Spacer(modifier = Modifier.width(16.dp))
//                    Text(
//                        "Save Document",
//                        fontSize = 16.sp,
//                        fontWeight = FontWeight.Medium
//                    )
//                }
//            }
//        }
//    }
//}
//
//data class FormatOption(
//    val value: String,
//    val name: String,
//    val description: String
//)